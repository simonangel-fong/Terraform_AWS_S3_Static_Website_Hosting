name: "Terraform Plan"

on:
  push:
    branches: [master]
    paths:
      - terraform/**
      - web/**
  pull_request:
    branches: [master]
    paths:
      - terraform/**
      - web/**
  workflow_dispatch:

jobs:
  plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        # Specify pwd
        working-directory: ./terraform

    env:
      TF_LOG: INFO
      CONFIG_DIRECTORY: "./"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
      TF_VAR_web_domain_name: ${{ secrets.WEB_DOMAIN_NAME }}
      TF_VAR_web_subdomain_name: ${{ secrets.WEB_SUBDOMAIN_NAME }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      BUCKET_TF_STATE: ${{ secrets.AWS_ACCESS_KEY_ID}}

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="key=${{ secrets.TF_STATE_KEY }}" \
            -backend-config="encrypt=true"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      # - name: Terraform plan
      #   id: plan
      #   if: github.event_name == 'pull_request'
      #   run: terraform plan -no-color -input=false
      #   continue-on-error: true

      # - name: Set up Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: 1.6.6

      # - name: Terraform Init
      #   run: terraform init

      # - name: Terraform Validate
      #   run: terraform validate

      # # - name: Terraform Plan
      # # run: terraform plan

      - run: terraform apply -auto-approve
      # - name: Terraform Apply
      #   run: terraform apply -auto-approve
      # env:
      #     TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}
