name: "Terraform Plan"

on:
  push:
    branches: [master]
    # paths:
    #   - terraform/**
    #   - web/**
  pull_request:
    branches: [master]
    paths:
      - terraform/**
      - web/**
  workflow_dispatch:

jobs:
  plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        # Specify pwd
        working-directory: ./terraform

    env:
      TF_LOG: INFO
      # CONFIG_DIRECTORY: "./"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BACKEND_BUCKET: ${{ secrets.AWS_BACKEND_BUCKET }}
      AWS_BACKEND_BUCKET_KEY: ${{ secrets.AWS_BACKEND_BUCKET_KEY }}

      TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
      TF_VAR_app_name: ${{ secrets.APP_NAME }}
      TF_VAR_app_domain_name: ${{ secrets.APP_DOMAIN_NAME }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4

      - name: Read Terraform Action
        id: action
        run: |
          pwd
          ls -al
          if [ -f ".terraform-action" ]; then
            ACTION=$(cat ../.terraform-action | tr -d '\n\r')
            echo "action=$ACTION" >> $GITHUB_OUTPUT
          else
            echo "action=plan" >> $GITHUB_OUTPUT
          fi

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init with backend S3 bucket
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.AWS_BACKEND_BUCKET }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="key=${{ secrets.AWS_BACKEND_BUCKET_KEY }}" \
            -backend-config="encrypt=true"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        if: |
          github.ref == 'refs/heads/master' && 
          github.event_name == 'push' && 
          steps.action.outputs.action == 'apply'
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: |
          github.ref == 'refs/heads/master' && 
          github.event_name == 'push' && 
          steps.action.outputs.action == 'destroy'
        run: terraform destroy -auto-approve
